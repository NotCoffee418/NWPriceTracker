@page "/install"
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h3>Installer</h3>

<Table>
    <TableHeader>
        <TableRow>
            <TableHeaderCell>Installer</TableHeaderCell>
            <TableHeaderCell>Run</TableHeaderCell>
            <TableHeaderCell>Status</TableHeaderCell>
        </TableRow>
    </TableHeader>
    <TableBody>
        @foreach (InstallInfo row in installStatuses)
        {
            <TableRow>
                <TableRowCell>                    
                    @if (row.InstallStatus == InstallInfo.Status.Installing)
                    {
                        <SpinKit Type="SpinKitType.Chase" Size="40" Color="#666" />
                    }
                    else
                    {
                        <Button Class="btn-primary mr-2" Clicked="@(async () => RunInstaller(row))">Install</Button>
                    } 
                    
                    @if (row.InstallStatus == InstallInfo.Status.Error)
                    {
                        <span class="oi oi-circle-x text-danger" aria-hidden="true"></span>
                    }
                    else if (row.InstallStatus == InstallInfo.Status.Installed)
                    {
                        <span class="oi oi-circle-check text-success" aria-hidden="true"></span>
                    }
                </TableRowCell>    
                <TableRowCell>@row.Description</TableRowCell>            
                <TableRowCell>
                    @row.StatusMessage
                </TableRowCell>
            </TableRow>
        }
    </TableBody>
</Table>

@code {
    private HubConnection? hubConnection;
    List<InstallInfo> installStatuses = new()
        {
            new()
            {
                InstallerName = "InstallItems",
                Description = "Install or update items from newworldfans.com",
            }
        };

    protected override async Task OnInitializedAsync()
    {
        // create hub connection
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/hub/installer"))
            .Build();
        await hubConnection.StartAsync();

        // Listen for status messages
        hubConnection.On<string, string>("OnStatusUpdate", (string installerName, string statusMessage) =>
        {
            installStatuses
                .Where(x => x.InstallerName == installerName)
                .ToList()
                .ForEach(ii =>
                {
                    ii.StatusMessage = statusMessage;
                    StateHasChanged();
                });
        });
    }

    private async Task RunInstaller(InstallInfo ii)
    {
        // Indicate running
        ii.InstallStatus = InstallInfo.Status.Installing;
        ii.StatusMessage = "Running installer...";
        StateHasChanged();

        try
        {
            // run and Indicate complate
            (bool success, ii.StatusMessage) = await hubConnection.InvokeAsync<(bool, string)>(ii.InstallerName);
            ii.InstallStatus = success ? InstallInfo.Status.Installed : InstallInfo.Status.Error;
        }
        catch (Exception ex)
        {
            ii.InstallStatus = InstallInfo.Status.Error;
            ii.StatusMessage = ex.Message;
        }
        finally
        {
            StateHasChanged();
        }
    }
}